---
import { getCollection } from "astro:content";
import { Marked } from "marked";
// @ts-ignore
import { markedHighlight } from "marked-highlight";
import { codeToHtml } from "shikiji";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("projects");
  return posts.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

async function getMostRecentCommit(owner: string, repo: string) {
  const apiUrl = `https://api.github.com/repos/${owner}/${repo}/commits/main`;

  const response = await fetch(apiUrl, {
    headers: {
      Accept: "application/vnd.github.v3+json",
    },
  });

  const data = await response.json();
  const { sha, html_url: url } = data;

  return { sha, url };
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const githubUrl = new URL(entry.data.repo);
const readmeUrl = `https://raw.githubusercontent.com${githubUrl.pathname}/main/README.md`;
const [owner, repo] = githubUrl.pathname.split("/").slice(1, 3);
const mostRecentCommit = await getMostRecentCommit(owner, repo);
const response = await fetch(readmeUrl);
const markdown = await response.text();
const marked = new Marked(
  markedHighlight({
    async: true,
    langPrefix: "language-",
    highlight(input: string, lang: string) {
      const code = codeToHtml(input, {
        lang,
        theme: "dark-plus",
      });
      return code;
    },
  }),
);
const content = marked.parse(markdown);

// TODO: link to repo
// TODO: link to live project
// TODO: load last commit
---

<Layout title={entry.data.name}>
  <header class="space-y-2 py-4">
    <h1 class="font-straker text-4xl text-zinc-800">
      <svg
        class="h-6"
        viewBox="0 0 218 38"
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        xml:space="preserve"
        style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"
      >
        <g transform="matrix(1,0,0,1,-43.0698,-19.7531)">
          <g transform="matrix(1,0,0,1,-49.9206,-317.815)">
            <text
              x="91.94px"
              y="367.968px"
              class="font-straker fill-current text-stone-100"
              style="font-size:50px;">crowdq</text
            >
            <text
              x="245.34px"
              y="367.968px"
              style="font-family:'Straker';font-size:50px;fill:rgb(249,115,22);"
              >.</text
            >
            <g transform="matrix(50,0,0,50,312.19,367.968)"> </g>
            <text
              x="257.59px"
              y="367.968px"
              style="font-size:50px;"
              class="font-straker fill-current text-stone-100">fm</text
            >
          </g>
        </g>
      </svg>
    </h1>
    <div class="text-base">
      <a
        href="/"
        class="text-rainee-800 underline hover:text-zinc-800 dark:text-rainee-400 dark:hover:text-rainee-500"
        >Jonathan Foster</a
      ><span class="text-zinc-500 dark:text-zinc-400">
        - Last Commit: <a
          href={mostRecentCommit.url}
          class="underline dark:hover:text-zinc-500"
          >{mostRecentCommit.sha.slice(0, 16)}</a
        ></span
      >
    </div>
  </header>

  <article set:html={content} class="readme" />

  <Content />
</Layout>

<style is:global>
  .readme {
    @apply font-sans text-base text-zinc-300;
  }

  .readme a {
    @apply text-rainee-700 underline hover:text-rainee-900 dark:text-rainee-300 dark:hover:text-rainee-400;
  }

  .readme ul {
    @apply mt-2 list-inside list-disc pl-1;
  }

  .readme ul:has(input[type="checkbox"]) {
    @apply list-none;
  }

  .readme ol {
    @apply mt-4 list-inside list-decimal pl-1;
  }

  .readme ul ul {
    @apply mt-0 pl-4;
  }

  .readme h2 {
    @apply mt-6 font-sans text-xl font-bold;
  }

  .readme h3 {
    @apply mt-4 font-sans text-lg font-bold dark:text-zinc-200;
  }

  .readme p {
    @apply mt-4;
  }

  .readme pre.shiki {
    @apply mt-2 rounded border border-black/10 p-4 font-mono text-sm shadow-sm dark:border-white/5;
  }

  .readme p > code,
  .readme ol code,
  .readme ul code {
    @apply rounded border-0 border-rainee-400 bg-zinc-200/60 px-1 py-px font-mono text-sm text-rainee-700 dark:border-white/10 dark:bg-black/20 dark:text-rainee-300;
  }

  .readme pre code {
    @apply border-0 bg-transparent p-0 font-mono;
  }

  .readme input {
    @apply accent-rainee-500;
    accent-color: #0ea5e9 !important;
    appearance: none;
  }

  .readme input::before {
    @apply mr-1 dark:invert;
    content: "ðŸ”œ";
  }

  .readme input:checked::before {
    content: "âœ…";
    filter: invert(0);
  }
</style>
